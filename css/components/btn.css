.btn {
  --btn-border-width: 4px;
  --btn-height: 50px;
  --btn-min-width: 80px;
  /* 14px */
  --btn-font-size: 0.875rem;
  --btn-inactive-outline-color: #cbd8e199;

  appearance: none;
  /* the .interface container has pointer-events: none */
  pointer-events: all;

  border-radius: 40px;
  border-width: var(--btn-border-width);
  border-style: solid;
  border-color: transparent;
  padding-inline: 12px;

  height: var(--btn-height);
  min-width: var(--btn-min-width);

  display: flex;
  align-items: center;
  justify-content: center;
  gap: 8px;
  text-align: center;
  font-family: var(--font-tahoma);
  font-weight: bold;
  font-size: var(--btn-font-size);
  text-decoration: none;
  cursor: pointer;

  transition: 100ms linear color, 100ms linear background-color, 100ms linear border-color;

  &:where([disabled]) {
    opacity: 0.2;
  }

  &:where(:has(svg.brush)) {
    width: 120px;
    padding-inline: 0;
  }

  /* settings for viewports above 500px in em units */
  @media (min-width: calc((500/16) * 1em)) {
    /* 16px */
    --btn-font-size: 1rem;
    --btn-height: 60px;
    --btn-min-width: 100px;
  }

  /* settings for viewports above 768px in em units */
  @media (min-width: calc((768/16) * 1em)) {
    /* 18px */
    --btn-font-size: 1.125rem;
    --btn-height: 70px;
    --btn-min-width: 120px;
  }


  :where(svg) {
    fill: none;
    stroke: currentColor;
    stroke-linecap: round;

    &:where(.brush) {
      stroke-width: 3.7px;
    }

    &:where(.icon) {
      width: 1em;
      aspect-ratio: 1;
    }
  }

  :where(.rotationscape) & {
    --btn-inactive-outline-color: #7e888fdd;
  }

  :where(.linescape) & {
    --btn-inactive-outline-color: #ffffffdd;
  }

  :where(.symmetryscape) & {
    --btn-inactive-outline-color: #cccccc;

  }


  &:where(:active, :hover, .active) {
    border-color: var(--color-white);
    background-color: var(--theme-bg, var(--color-blue-70));
    color: var(--color-white);
  }
}

.btn--white {
  background-color: var(--color-white);
  color: var(--color-grey-40);

  &:where(:active, :hover, .active) {
    border-color: var(--color-white);
    background-color: var(--theme-bg, var(--color-blue-70));
    color: var(--color-white);
  }
}

.btn--theme {
  background-color: var(--theme-button-bg, var(--color-blue-90));
  color: var(--color-grey-40);
}

/* 'split' buttons have rounded outer edges, and may or may not have square swatches inbetween them */
.btn-group--split {

  --corner-radius: 4px;

  display: flex;
  flex-wrap: wrap;
  gap: 4px;



  :where(.btn) {
    --split-btn-width: calc(var(--btn-min-width) + 20px);
    border-color: var(--color-grey-40);

    /* square swatches: */
    border-radius: var(--corner-radius);
    min-width: unset;
    aspect-ratio: 1;

  }



  /* first button is rounded on the left */
  :where(.btn:first-child) {
    width: var(--split-btn-width);
    border-radius: 40px var(--corner-radius) var(--corner-radius) 40px;
    padding-left: 16px;

  }

  :where(.symmetryscape) :where(.btn:first-child) {
    width: unset;
    min-width: 100px;
    margin-left: 0;
  }

  /* last (visible) button is rounded on the right */
  :where(.btn:last-child, .btn:has(+ .u-hide)) {
    width: var(--split-btn-width);
    border-radius: var(--corner-radius) 40px 40px var(--corner-radius);
    padding-right: 16px;
  }
}

:where(.symmetryscape) .btn-group--split {
  :where(.btn:first-child) {
    width: var(--btn-min-width);
  }

  :where(.btn:last-child, .btn:has(+ .u-hide)) {
    width: unset;
    min-width: 80px;
  }
}

.btn--themed-outline {
  border-color: var(--btn-inactive-outline-color);

  &:where(:hover, :active, .active) {
    border-color: var(--theme-button-border, var(--color-blue-70));

    &:where(.btn--white) {

      border-color: var(--color-white);
    }
  }
}

.btn--light-gradient {
  background-image: linear-gradient(in oklab 90deg,
      var(--color-light-1, #F2A97E), var(--color-light-2, #F28D77));
}

.btn--dark-gradient {
  background-image: linear-gradient(in oklab 90deg,
      var(--color-dark-1, #7E708C), var(--color-dark-2, #49538C));
}